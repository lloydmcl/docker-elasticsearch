# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
cluster.name: {{ elastic_cluster_name }}
#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
node.name: {{ elastic_node_name }}
#node.master: {{ elastic_node_master}}
# You can consider disabling data on the master node.
#node.data: false 
#
# Add custom attributes to the node:
#
#node.attr.rack: r1
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
#path.data: /path/to/data
#
# Path to log files:
#
#path.logs: /path/to/logs
#
# Path to snapshots for backups:
#
path.repo: {{ elastic_backup_dir }}
#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
#bootstrap.memory_lock: true
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):
#
#network.host: 192.168.0.1
network.host: 0.0.0.0
network.publish_host: {{ ansible_default_ipv4.address }}
# Uncomment the line below and put your master node IP.
#discovery.zen.ping.unicast.hosts: ["172.20.100.128"]

#
# Set a custom port for HTTP:
#
#http.port: 9200
#
# For more information, consult the network module documentation.
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when new node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#
#discovery.zen.ping.unicast.hosts: ["host1", "host2"]
#
# Prevent the "split brain" by configuring the majority of nodes (total number of master-eligible nodes / 2 + 1):
#
#discovery.zen.minimum_master_nodes: 3
#
# For more information, consult the zen discovery module documentation.
#
discovery.seed_hosts: [ {% for host in groups['elastic_cluster_hosts'] %}"{{ host }}", {% endfor %} "127.0.0.1" ]
cluster.initial_master_nodes: [ {% for host in groups['elastic_cluster_hosts'] %}"{{ host }}"{% if not loop.last %}, {% endif %}{% endfor %} ]
# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
#gateway.recover_after_nodes: 3
#
# For more information, consult the gateway module documentation.
#
# ---------------------------------- Various -----------------------------------
#
# Require explicit names when deleting indices:
#
#action.destructive_requires_name: true

# Transport
#transport.host: 0.0.0.0
#transport.port: 9300

xpack.monitoring.collection.enabled: "true"
xpack.security.enabled: true

xpack.security.http.ssl.enabled: true
xpack.security.http.ssl.key: {{ elastic_certs_dir }}/{{ ansible_hostname }}/{{ ansible_hostname }}.key
xpack.security.http.ssl.certificate_authorities: {{ elastic_certs_dir }}/ca/ca.crt
xpack.security.http.ssl.certificate: {{ elastic_certs_dir }}/{{ ansible_hostname }}/{{ ansible_hostname }}.crt
      
xpack.security.transport.ssl.enabled: true
xpack.security.transport.ssl.verification_mode: certificate 
xpack.security.transport.ssl.certificate_authorities: {{ elastic_certs_dir }}/ca/ca.crt
xpack.security.transport.ssl.certificate: {{ elastic_certs_dir }}/{{ ansible_hostname }}/{{ ansible_hostname }}.crt
xpack.security.transport.ssl.key: {{ elastic_certs_dir }}/{{ ansible_hostname }}/{{ ansible_hostname }}.key